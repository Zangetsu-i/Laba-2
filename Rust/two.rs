use std::io;
fn read_input(prompt: &str) -> i32 {
    println!("{}", prompt);
    let mut input = String::new();
    io::stdin().read_line(&mut input).expect("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞");
    input.trim().parse::<i32>().expect("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")
}
fn drink(mut n: i32, m: i32) -> (i32, i32) {
    let mut vipito = n;
    let mut step = 1;
    let mut pusto = n;
    println!("input: {}, {}", n, m);
    println!("–î–∞–Ω–æ: {}", "üòä".repeat(n as usize));
    println!("{} –®–∞–≥ {}", step, "üòû".repeat(pusto as usize));
    while pusto >= m {
        step += 1;
        let smen = pusto / m;
        pusto = pusto % m + smen;
        vipito += smen;
        println!("{} –®–∞–≥ {}", step, "üòä".repeat(pusto as usize));
        step += 1;
        println!("{} –®–∞–≥ {}", step, "üòû".repeat(pusto as usize));
    }
    println!("Output: {}, {}", vipito, step);
    (vipito, step)
}
fn main() {
    let n = read_input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–Ω–æ–∫:");
    let m = read_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–Ω–æ–∫ –¥–ª—è –æ–±–º–µ–Ω–∞:");
    drink(n, m);
}
